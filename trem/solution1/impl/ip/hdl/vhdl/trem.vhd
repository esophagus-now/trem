-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.2
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity trem is
port (
    in_V_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    out_V_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    in_V_TVALID : IN STD_LOGIC;
    in_V_TREADY : OUT STD_LOGIC;
    out_V_TVALID : OUT STD_LOGIC;
    out_V_TREADY : IN STD_LOGIC );
end;


architecture behav of trem is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "trem,hls_ip_2017_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z100ffg900-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=7.256000,HLS_SYN_LAT=32,HLS_SYN_TPT=31,HLS_SYN_MEM=0,HLS_SYN_DSP=5,HLS_SYN_FF=1835,HLS_SYN_LUT=2599}";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';

    signal ap_rst_n_inv : STD_LOGIC;
    signal Block_proc_U0_ap_start : STD_LOGIC;
    signal Block_proc_U0_ap_done : STD_LOGIC;
    signal Block_proc_U0_ap_continue : STD_LOGIC;
    signal Block_proc_U0_ap_idle : STD_LOGIC;
    signal Block_proc_U0_ap_ready : STD_LOGIC;
    signal Block_proc_U0_in_V_TREADY : STD_LOGIC;
    signal Block_proc_U0_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_channel_done_trem_in_loc_channel : STD_LOGIC;
    signal trem_in_loc_channel_full_n : STD_LOGIC;
    signal tremolo_calculation_U0_ap_start : STD_LOGIC;
    signal tremolo_calculation_U0_ap_done : STD_LOGIC;
    signal tremolo_calculation_U0_ap_continue : STD_LOGIC;
    signal tremolo_calculation_U0_ap_idle : STD_LOGIC;
    signal tremolo_calculation_U0_ap_ready : STD_LOGIC;
    signal tremolo_calculation_U0_return_r : STD_LOGIC_VECTOR (31 downto 0);
    signal tremolo_calculation_U0_return_r_ap_vld : STD_LOGIC;
    signal ap_channel_done_p_channel : STD_LOGIC;
    signal p_channel_full_n : STD_LOGIC;
    signal Block_proc4_U0_ap_start : STD_LOGIC;
    signal Block_proc4_U0_ap_done : STD_LOGIC;
    signal Block_proc4_U0_ap_continue : STD_LOGIC;
    signal Block_proc4_U0_ap_idle : STD_LOGIC;
    signal Block_proc4_U0_ap_ready : STD_LOGIC;
    signal Block_proc4_U0_out_V_TDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_proc4_U0_out_V_TVALID : STD_LOGIC;
    signal ap_sync_continue : STD_LOGIC;
    signal trem_in_loc_channel_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal trem_in_loc_channel_empty_n : STD_LOGIC;
    signal p_channel_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal p_channel_empty_n : STD_LOGIC;
    signal Block_proc_U0_start_full_n : STD_LOGIC;
    signal Block_proc_U0_start_write : STD_LOGIC;
    signal tremolo_calculation_U0_start_full_n : STD_LOGIC;
    signal tremolo_calculation_U0_start_write : STD_LOGIC;
    signal Block_proc4_U0_start_full_n : STD_LOGIC;
    signal Block_proc4_U0_start_write : STD_LOGIC;

    component Block_proc IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        in_V_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        in_V_TVALID : IN STD_LOGIC;
        in_V_TREADY : OUT STD_LOGIC;
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component tremolo_calculation IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        return_r : OUT STD_LOGIC_VECTOR (31 downto 0);
        return_r_ap_vld : OUT STD_LOGIC;
        xin : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component Block_proc4 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        trem_out : IN STD_LOGIC_VECTOR (31 downto 0);
        out_V_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        out_V_TVALID : OUT STD_LOGIC;
        out_V_TREADY : IN STD_LOGIC );
    end component;


    component fifo_w32_d2_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;



begin
    Block_proc_U0 : component Block_proc
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Block_proc_U0_ap_start,
        ap_done => Block_proc_U0_ap_done,
        ap_continue => Block_proc_U0_ap_continue,
        ap_idle => Block_proc_U0_ap_idle,
        ap_ready => Block_proc_U0_ap_ready,
        in_V_TDATA => in_V_TDATA,
        in_V_TVALID => in_V_TVALID,
        in_V_TREADY => Block_proc_U0_in_V_TREADY,
        ap_return => Block_proc_U0_ap_return);

    tremolo_calculation_U0 : component tremolo_calculation
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => tremolo_calculation_U0_ap_start,
        ap_done => tremolo_calculation_U0_ap_done,
        ap_continue => tremolo_calculation_U0_ap_continue,
        ap_idle => tremolo_calculation_U0_ap_idle,
        ap_ready => tremolo_calculation_U0_ap_ready,
        return_r => tremolo_calculation_U0_return_r,
        return_r_ap_vld => tremolo_calculation_U0_return_r_ap_vld,
        xin => trem_in_loc_channel_dout);

    Block_proc4_U0 : component Block_proc4
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Block_proc4_U0_ap_start,
        ap_done => Block_proc4_U0_ap_done,
        ap_continue => Block_proc4_U0_ap_continue,
        ap_idle => Block_proc4_U0_ap_idle,
        ap_ready => Block_proc4_U0_ap_ready,
        trem_out => p_channel_dout,
        out_V_TDATA => Block_proc4_U0_out_V_TDATA,
        out_V_TVALID => Block_proc4_U0_out_V_TVALID,
        out_V_TREADY => out_V_TREADY);

    trem_in_loc_channel_U : component fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_proc_U0_ap_return,
        if_full_n => trem_in_loc_channel_full_n,
        if_write => Block_proc_U0_ap_done,
        if_dout => trem_in_loc_channel_dout,
        if_empty_n => trem_in_loc_channel_empty_n,
        if_read => tremolo_calculation_U0_ap_ready);

    p_channel_U : component fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => tremolo_calculation_U0_return_r,
        if_full_n => p_channel_full_n,
        if_write => tremolo_calculation_U0_ap_done,
        if_dout => p_channel_dout,
        if_empty_n => p_channel_empty_n,
        if_read => Block_proc4_U0_ap_ready);




    Block_proc4_U0_ap_continue <= ap_const_logic_1;
    Block_proc4_U0_ap_start <= p_channel_empty_n;
    Block_proc4_U0_start_full_n <= ap_const_logic_0;
    Block_proc4_U0_start_write <= ap_const_logic_0;
    Block_proc_U0_ap_continue <= trem_in_loc_channel_full_n;
    Block_proc_U0_ap_start <= ap_const_logic_1;
    Block_proc_U0_start_full_n <= ap_const_logic_0;
    Block_proc_U0_start_write <= ap_const_logic_0;
    ap_channel_done_p_channel <= tremolo_calculation_U0_ap_done;
    ap_channel_done_trem_in_loc_channel <= Block_proc_U0_ap_done;

    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    ap_sync_continue <= ap_const_logic_0;
    in_V_TREADY <= Block_proc_U0_in_V_TREADY;
    out_V_TDATA <= Block_proc4_U0_out_V_TDATA;
    out_V_TVALID <= Block_proc4_U0_out_V_TVALID;
    tremolo_calculation_U0_ap_continue <= p_channel_full_n;
    tremolo_calculation_U0_ap_start <= trem_in_loc_channel_empty_n;
    tremolo_calculation_U0_start_full_n <= ap_const_logic_0;
    tremolo_calculation_U0_start_write <= ap_const_logic_0;
end behav;
