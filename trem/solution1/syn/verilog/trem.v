// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="trem,hls_ip_2017_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z100ffg900-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=7.256000,HLS_SYN_LAT=32,HLS_SYN_TPT=31,HLS_SYN_MEM=0,HLS_SYN_DSP=5,HLS_SYN_FF=1835,HLS_SYN_LUT=2599}" *)

module trem (
        in_V_TDATA,
        out_V_TDATA,
        ap_clk,
        ap_rst_n,
        in_V_TVALID,
        in_V_TREADY,
        out_V_TVALID,
        out_V_TREADY
);


input  [31:0] in_V_TDATA;
output  [31:0] out_V_TDATA;
input   ap_clk;
input   ap_rst_n;
input   in_V_TVALID;
output   in_V_TREADY;
output   out_V_TVALID;
input   out_V_TREADY;

reg    ap_rst_n_inv;
wire    Block_proc_U0_ap_start;
wire    Block_proc_U0_ap_done;
wire    Block_proc_U0_ap_continue;
wire    Block_proc_U0_ap_idle;
wire    Block_proc_U0_ap_ready;
wire    Block_proc_U0_in_V_TREADY;
wire   [31:0] Block_proc_U0_ap_return;
wire    ap_channel_done_trem_in_loc_channel;
wire    trem_in_loc_channel_full_n;
wire    tremolo_calculation_U0_ap_start;
wire    tremolo_calculation_U0_ap_done;
wire    tremolo_calculation_U0_ap_continue;
wire    tremolo_calculation_U0_ap_idle;
wire    tremolo_calculation_U0_ap_ready;
wire   [31:0] tremolo_calculation_U0_return_r;
wire    tremolo_calculation_U0_return_r_ap_vld;
wire    ap_channel_done_p_channel;
wire    p_channel_full_n;
wire    Block_proc4_U0_ap_start;
wire    Block_proc4_U0_ap_done;
wire    Block_proc4_U0_ap_continue;
wire    Block_proc4_U0_ap_idle;
wire    Block_proc4_U0_ap_ready;
wire   [31:0] Block_proc4_U0_out_V_TDATA;
wire    Block_proc4_U0_out_V_TVALID;
wire    ap_sync_continue;
wire   [31:0] trem_in_loc_channel_dout;
wire    trem_in_loc_channel_empty_n;
wire   [31:0] p_channel_dout;
wire    p_channel_empty_n;
wire    Block_proc_U0_start_full_n;
wire    Block_proc_U0_start_write;
wire    tremolo_calculation_U0_start_full_n;
wire    tremolo_calculation_U0_start_write;
wire    Block_proc4_U0_start_full_n;
wire    Block_proc4_U0_start_write;

Block_proc Block_proc_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(Block_proc_U0_ap_start),
    .ap_done(Block_proc_U0_ap_done),
    .ap_continue(Block_proc_U0_ap_continue),
    .ap_idle(Block_proc_U0_ap_idle),
    .ap_ready(Block_proc_U0_ap_ready),
    .in_V_TDATA(in_V_TDATA),
    .in_V_TVALID(in_V_TVALID),
    .in_V_TREADY(Block_proc_U0_in_V_TREADY),
    .ap_return(Block_proc_U0_ap_return)
);

tremolo_calculation tremolo_calculation_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(tremolo_calculation_U0_ap_start),
    .ap_done(tremolo_calculation_U0_ap_done),
    .ap_continue(tremolo_calculation_U0_ap_continue),
    .ap_idle(tremolo_calculation_U0_ap_idle),
    .ap_ready(tremolo_calculation_U0_ap_ready),
    .return_r(tremolo_calculation_U0_return_r),
    .return_r_ap_vld(tremolo_calculation_U0_return_r_ap_vld),
    .xin(trem_in_loc_channel_dout)
);

Block_proc4 Block_proc4_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(Block_proc4_U0_ap_start),
    .ap_done(Block_proc4_U0_ap_done),
    .ap_continue(Block_proc4_U0_ap_continue),
    .ap_idle(Block_proc4_U0_ap_idle),
    .ap_ready(Block_proc4_U0_ap_ready),
    .trem_out(p_channel_dout),
    .out_V_TDATA(Block_proc4_U0_out_V_TDATA),
    .out_V_TVALID(Block_proc4_U0_out_V_TVALID),
    .out_V_TREADY(out_V_TREADY)
);

fifo_w32_d2_A trem_in_loc_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_proc_U0_ap_return),
    .if_full_n(trem_in_loc_channel_full_n),
    .if_write(Block_proc_U0_ap_done),
    .if_dout(trem_in_loc_channel_dout),
    .if_empty_n(trem_in_loc_channel_empty_n),
    .if_read(tremolo_calculation_U0_ap_ready)
);

fifo_w32_d2_A p_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(tremolo_calculation_U0_return_r),
    .if_full_n(p_channel_full_n),
    .if_write(tremolo_calculation_U0_ap_done),
    .if_dout(p_channel_dout),
    .if_empty_n(p_channel_empty_n),
    .if_read(Block_proc4_U0_ap_ready)
);

assign Block_proc4_U0_ap_continue = 1'b1;

assign Block_proc4_U0_ap_start = p_channel_empty_n;

assign Block_proc4_U0_start_full_n = 1'b0;

assign Block_proc4_U0_start_write = 1'b0;

assign Block_proc_U0_ap_continue = trem_in_loc_channel_full_n;

assign Block_proc_U0_ap_start = 1'b1;

assign Block_proc_U0_start_full_n = 1'b0;

assign Block_proc_U0_start_write = 1'b0;

assign ap_channel_done_p_channel = tremolo_calculation_U0_ap_done;

assign ap_channel_done_trem_in_loc_channel = Block_proc_U0_ap_done;

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign ap_sync_continue = 1'b0;

assign in_V_TREADY = Block_proc_U0_in_V_TREADY;

assign out_V_TDATA = Block_proc4_U0_out_V_TDATA;

assign out_V_TVALID = Block_proc4_U0_out_V_TVALID;

assign tremolo_calculation_U0_ap_continue = p_channel_full_n;

assign tremolo_calculation_U0_ap_start = trem_in_loc_channel_empty_n;

assign tremolo_calculation_U0_start_full_n = 1'b0;

assign tremolo_calculation_U0_start_write = 1'b0;

endmodule //trem
